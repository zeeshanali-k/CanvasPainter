plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
//    id 'com.vanniktech.maven.publish'
    id 'maven-publish'
}
ext {
    version_name = '1.0.0'
//    group = "tech.dev-scion"
//    archivesBaseName = "canvaspainter"
//    artifactId = "canvaspainter"
}
android {
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
//Compose deps
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
//    Other
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

//    Color Picker
    implementation 'com.godaddy.android.colorpicker:compose-color-picker:0.5.0'
}

//TODO publishing {
//    repositories {
//        maven {
//            def releasesRepoUrl = "$buildDir/repos/releases"
//            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
//            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//        }
//    }
//}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'tech.dev-scion'
                artifactId = 'canvaspainter'
                version = "1.0.0"

            }
        }
    }
}


task printVersionName {
    println project.ext.version_name
}
/*

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'canvaspainter'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Canvas Painter'
                description = 'Android Jetpack Compose Paint Library'
                url = 'http://github.com/zeeshanali-k/CanvasPainter'
                properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id ='zeeshanali-k'
                        name ='Zeeshan Ali'
                        email ='zeeshanalik73@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/zeeshanali-k/CanvasPainter.git'
                    developerConnection = 'scm:git:ssh://github.com/zeeshanali-k/CanvasPainter.git'
                    url = 'http://github.com/zeeshanali-k/CanvasPainter/'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
*/

//OLD
/*
uploadArchives {
    repositories {
        mavenJava(MavenPublication) {
            beforeDeployment { MavenPublication deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Canvas Painter'
                packaging 'jar'
                // optionally artifactId can be defined here
                artifactId ext.artifactId
                description 'Jetpack Compose Paint Library'
                url 'https://github.com/zeeshanali-k/CanvasPainter'

                scm {
                    connection 'scm:svn:http://foo.googlecode.com/svn/trunk/'
                    developerConnection 'scm:svn:https://foo.googlecode.com/svn/trunk/'
                    url 'http://foo.googlecode.com/svn/trunk/'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'zeeshanali-k'
                        name 'Zeeshan Ali'
                        email 'zeeshanalik73@gmail.com'
                    }
                }
            }
        }
    }
}*/
